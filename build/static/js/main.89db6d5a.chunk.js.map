{"version":3,"sources":["features/userSlice.js","InputOption.js","Posts.js","firebase.js","Feed.js","HeaderOption.js","Header.js","Login.js","SideBar.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","InputOption","Icon","title","color","className","style","Posts","forwardRef","ref","message","photoURL","useSelector","src","email","ThumbUpAltOutlined","CommentIcon","ArrowRightAltRoundedIcon","SendRoundedIcon","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","Feed","Avatar","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","photoUrl","onSubmit","e","preventDefault","add","displayName","description","timestamp","FieldValue","serverTimestamp","value","onChange","target","type","ImageIcon","VideoLibraryIcon","EventIcon","AssignmentIcon","HeaderOption","avatar","Header","dispatch","useDispatch","alt","placeholder","HomeRoundedIcon","SupervisorAccountRoundedIcon","WorkIcon","CommentRoundedIcon","NotificationsRoundedIcon","onClick","signOut","ExitToAppIcon","AppsRoundedIcon","Login","setName","setEmail","password","setPassword","profilePic","setProfilepic","signInWithEmailAndPassword","then","userAuth","uid","alert","createUserWithEmailAndPassword","updateProfile","catch","error","SideBar","recentItems","topic","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mZAEaA,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZC,KAAM,MAERC,SAAU,CACRC,MAAO,SAACC,EAAOC,GACbD,EAAMH,KAAOI,EAAOC,SAEtBC,OAAQ,SAACH,GACPA,EAAMH,KAAO,SAKZ,EAA0BJ,EAAUW,QAA5BL,EAAR,EAAQA,MAAOI,EAAf,EAAeA,OAGTE,EAAa,SAACL,GAAD,OAAWA,EAAMH,KAAKA,MAEjCJ,IAAf,Q,wCCVea,MATf,YAA8C,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAClC,OACE,sBAAKC,UAAU,cAAf,UACE,cAACH,EAAD,CAAMI,MAAO,CAAEF,MAAOA,KACtB,6BAAKD,Q,iJCmCII,G,MA/BDC,sBAAW,WAA8BC,GAAS,IAApCnB,EAAmC,EAAnCA,KAAMoB,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,SACnCnB,EAAOoB,YAAYZ,GAEzB,OACE,sBAAKS,IAAKA,EAAKJ,UAAU,QAAzB,UACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQQ,IAAKF,EAAb,SAAwBrB,EAAK,KAC7B,sBAAKe,UAAU,cAAf,UACE,6BAAKf,IACL,4BAAIE,EAAKsB,cAIb,qBAAKT,UAAU,cAAf,SACE,4BAAIK,MAGN,sBAAKL,UAAU,iBAAf,UACE,cAAC,EAAD,CAAaH,KAAMa,IAAoBZ,MAAM,OAAOC,MAAM,SAC1D,cAAC,EAAD,CAAaF,KAAMc,IAAab,MAAM,UAAUC,MAAM,SACtD,cAAC,EAAD,CACEF,KAAMe,IACNd,MAAM,QACNC,MAAM,SAER,cAAC,EAAD,CAAaF,KAAMgB,IAAiBf,MAAM,OAAOC,MAAM,mB,QCvBzDe,EAAcC,IAASC,cAVN,CACrBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIXC,EAAKV,EAAYW,YACjBC,EAAOZ,EAAYY,O,QCuFVC,MAtFf,WACE,IA+BsBC,EAAQpB,EA/B9B,EAA0BqB,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACM9C,EAAOoB,YAAYZ,GA+BzB,OA7BAuC,qBAAU,WACRV,EAAGW,WAAW,SACXC,QAAQ,YAAa,QACrBC,YAAW,SAACC,GAAD,OACVL,EACEK,EAASC,KAAKC,KAAI,SAACC,GAAD,MAAU,CAC1BC,GAAID,EAAIC,GACRC,KAAMF,EAAIE,iBAIjB,IAmBD,sBAAK3C,UAAU,OAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,cAAf,WALgB4B,EAMAA,IANQpB,EAMArB,EAAKyD,SANG,cAAChB,EAAD,CAAQpB,IAAKA,KAML,IACtC,qBAAKR,UAAU,aAAf,SACE,cAAC,IAAD,MAEF,uBAAM6C,SAxBG,SAACC,GAChBA,EAAEC,iBAEFvB,EAAGW,WAAW,SAASa,IAAI,CACzB/D,KAAME,EAAK8D,YACXC,YAAa/D,EAAKsB,MAClBJ,QAASyB,EACTxB,SAAUnB,EAAKyD,SACfO,UAAWpC,IAASU,UAAU2B,WAAWC,oBAG3CtB,EAAS,KAaH,UACE,uBACEuB,MAAOxB,EACPyB,SAAU,SAACT,GAAD,OAAOf,EAASe,EAAEU,OAAOF,QACnCG,KAAK,SAEP,wBAAQA,KAAK,SAAb,wBAIJ,sBAAKzD,UAAU,qBAAf,UAEE,cAAC,EAAD,CAAaH,KAAM6D,IAAW5D,MAAM,QAAQC,MAAM,YAClD,cAAC,EAAD,CAAaF,KAAM8D,IAAkB7D,MAAM,QAAQC,MAAM,YACzD,cAAC,EAAD,CAAaF,KAAM+D,IAAW9D,MAAM,QAAQC,MAAM,YAClD,cAAC,EAAD,CACEF,KAAMgE,IACN/D,MAAM,gBACNC,MAAM,kBAKZ,cAAC,IAAD,UACGiC,EAAMQ,KACL,gBACEE,EADF,EACEA,GADF,IAEEC,KAAQ1D,EAFV,EAEUA,KAAMiE,EAFhB,EAEgBA,YAAa7C,EAF7B,EAE6BA,QAASC,EAFtC,EAEsCA,SAAU6C,EAFhD,EAEgDA,UAFhD,OAIE,cAAC,EAAD,CAEElE,KAAMA,EACNiE,YAAaA,EACb7C,QAASA,EACTC,SAAUA,EACV6C,UAAWA,GALNT,Y,MCpEJoB,MAdf,YAAgD,IAAxBC,EAAuB,EAAvBA,OAAQlE,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BX,EAAOoB,YAAYZ,GAEzB,OACE,sBAAKK,UAAU,eAAf,UACGH,GAAQ,cAACA,EAAD,CAAMG,UAAU,uBACxB+D,GACC,cAAC,IAAD,CAAQvD,IAAKrB,EAAKyD,SAAU5C,UAAU,uBAExC,oBAAIA,UAAU,sBAAd,SAAqCF,Q,uJC0C5BkE,OAzCf,WACE,IAAM7E,EAAOoB,YAAYZ,GACnBsE,EAAWC,cAQjB,OACE,sBAAKlE,UAAU,SAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBACEQ,IAAI,+DACJ2D,IAAI,KAEN,sBAAKnE,UAAU,iBAAf,UACE,cAAC,IAAD,IACA,uBAAOyD,KAAK,OAAOW,YAAY,iBAInC,sBAAKpE,UAAU,gBAAf,UACE,cAAC,EAAD,CAAcH,KAAMwE,IAAiBvE,MAAM,SAC3C,cAAC,EAAD,CAAcD,KAAMyE,IAA8BxE,MAAM,eACxD,cAAC,EAAD,CAAcD,KAAM0E,IAAUzE,MAAM,SACpC,cAAC,EAAD,CAAcD,KAAM2E,IAAoB1E,MAAM,aAC9C,cAAC,EAAD,CAAcD,KAAM4E,KAA0B3E,MAAM,kBACnDX,EAAO,cAAC,EAAD,CAAc4E,QAAQ,EAAMjE,MAAM,OAAuB,KAChEX,EACC,qBAAKuF,QA3BO,SAAC5B,GACnBA,EAAEC,iBACFkB,EAASxE,KACTiC,EAAKiD,WAwBC,SACE,cAAC,EAAD,CAAc9E,KAAM+E,KAAe9E,MAAM,eAEzC,KACJ,cAAC,EAAD,CAAcD,KAAMgF,KAAiB/E,MAAM,gB,MCgDpCgF,OA7Ff,WACE,MAAwBjD,mBAAS,IAAjC,mBAAO5C,EAAP,KAAa8F,EAAb,KACA,EAA0BlD,mBAAS,IAAnC,mBAAOpB,EAAP,KAAcuE,EAAd,KACA,EAAgCnD,mBAAS,IAAzC,mBAAOoD,EAAP,KAAiBC,EAAjB,KACA,EAAoCrD,mBAAS,IAA7C,mBAAOsD,EAAP,KAAmBC,EAAnB,KACMnB,EAAWC,cA0CjB,OACE,sBAAKlE,UAAU,QAAf,UACE,qBACEQ,IAAI,+EACJ2D,IAAI,KAEN,iCACE,uBACEb,MAAOrE,EACPsE,SAAU,SAACT,GAAD,OAAOiC,EAAQjC,EAAEU,OAAOF,QAClCc,YAAY,sCACZX,KAAK,SAEP,uBACEH,MAAO6B,EACP5B,SAAU,SAACT,GAAD,OAAOsC,EAActC,EAAEU,OAAOF,QACxCc,YAAY,sBACZX,KAAK,SAEP,uBACEH,MAAO7C,EACP8C,SAAU,SAACT,GAAD,OAAOkC,EAASlC,EAAEU,OAAOF,QACnCc,YAAY,QACZX,KAAK,UAEP,uBACEH,MAAO2B,EACP1B,SAAU,SAACT,GAAD,OAAOoC,EAAYpC,EAAEU,OAAOF,QACtCc,YAAY,WACZX,KAAK,aAEP,wBAAQA,KAAK,SAASiB,QAvET,SAAC5B,GAClBA,EAAEC,iBAEFrB,EAAK2D,2BAA2B5E,EAAOwE,GAAUK,MAAK,SAACC,GAAD,OACpDtB,EACE5E,EAAM,CACJmG,IAAKD,EAASpG,KAAKqG,IACnB/E,MAAO8E,EAASpG,KAAKsB,MACrBxB,KAAMsG,EAASpG,KAAK8D,YACpBkC,WAAYI,EAASpG,KAAKmB,gBA8D5B,wBAKF,8CACgB,IACd,sBAAMN,UAAU,kBAAkB0E,QA/DvB,WACf,IAAKzF,EAAM,OAAOwG,MAAM,0BAExB/D,EACGgE,+BAA+BjF,EAAOwE,GACtCK,MAAK,SAACC,GACLA,EAASpG,KACNwG,cAAc,CACb1C,YAAahE,EACbqB,SAAU6E,IAEXG,MAAK,kBACJrB,EACE5E,EAAM,CACJoB,MAAO8E,EAASpG,KAAKsB,MACrB+E,IAAKD,EAASpG,KAAKqG,IACnBvC,YAAahE,EACbkG,WAAYI,EAASpG,KAAKmB,kBAKnCsF,OAAM,SAACC,GAAD,OAAWJ,MAAMI,OAyCtB,iC,MClCOC,OAnDf,WACE,IAAM3G,EAAOoB,YAAYZ,GAEnBoG,EAAc,SAACC,GAAD,OAClB,sBAAKhG,UAAU,uBAAf,UACE,sBAAMA,UAAU,gBAAhB,eACA,4BAAIgG,QAIR,OACE,sBAAKhG,UAAU,UAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBACEQ,IAAI,8KACJ2D,IAAI,KAEN,cAAC,IAAD,CAAQnE,UAAU,kBAAkBQ,IAAKrB,EAAKyD,WAC9C,6BAAKzD,EAAK8D,cACV,6BAAK9D,EAAKsB,WAGZ,sBAAKT,UAAU,iBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,+CACA,mBAAGA,UAAU,sBAAb,sBAGF,sBAAKA,UAAU,gBAAf,UACE,8CACA,mBAAGA,UAAU,sBAAb,yBAGJ,sBAAKA,UAAU,kBAAf,UACE,uCACC+F,EAAY,WACZA,EAAY,eACZA,EAAY,cACZA,EAAY,kBACZA,EAAY,UACZA,EAAY,QACZA,EAAY,eACZA,EAAY,UACZA,EAAY,UACZA,EAAY,QACZA,EAAY,iB,8CCbNE,OAjCf,WACE,IAAMC,EAAc,SAACC,EAASC,GAAV,OAClB,sBAAKpG,UAAU,mBAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,cAAC,KAAD,MAGF,sBAAKA,UAAU,wBAAf,UACE,6BAAKmG,IACL,4BAAIC,WAKV,OACE,sBAAKpG,UAAU,UAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,+CACA,cAAC,KAAD,OAEDkG,EACC,iBACA,6DAEDA,EACC,oCACA,yBAEDA,EAAY,uBAAwB,6BCmB5BG,OAxCf,WACE,IAAMlH,EAAOoB,YAAYZ,GACnBsE,EAAWC,cAqBjB,OAnBAhC,qBAAU,WACRR,EAAK4E,oBAAmB,SAACf,GAGrBtB,EAFEsB,EAGAlG,EAAM,CACJoB,MAAO8E,EAAS9E,MAChB+E,IAAKD,EAASC,IACdvC,YAAasC,EAAStC,YACtBL,SAAU2C,EAASjF,WAKdb,UAGZ,IAGD,sBAAKO,UAAU,MAAf,UACE,cAAC,GAAD,IAEEb,EAGA,sBAAKa,UAAU,YAAf,UACE,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,OALF,cAAC,GAAD,QCrCKuG,GAAQC,YAAe,CAClCC,QAAS,CACPtH,KAAMuH,KCOUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJY,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjC,MAAK,SAACkC,GAClCA,EAAaC,kB","file":"static/js/main.89db6d5a.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\n// Selectors(allows us to pull information)\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import React from \"react\";\nimport \"./InputOption.css\";\n\nfunction InputOption({ Icon, title, color }) {\n  return (\n    <div className=\"inputOption\">\n      <Icon style={{ color: color }} />\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nexport default InputOption;\n","import React, { forwardRef } from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport { ThumbUpAltOutlined } from \"@material-ui/icons\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport ArrowRightAltRoundedIcon from \"@material-ui/icons/ArrowRightAltRounded\";\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\nimport InputOption from \"./InputOption\";\nimport \"./Posts.css\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\n\nconst Posts = forwardRef(({ name, message, photoURL }, ref) => {\n  const user = useSelector(selectUser);\n\n  return (\n    <div ref={ref} className=\"posts\">\n      <div className=\"posts__header\">\n        <Avatar src={photoURL}>{name[0]}</Avatar>\n        <div className=\"posts__info\">\n          <h2>{name}</h2>\n          <p>{user.email}</p>\n        </div>\n      </div>\n\n      <div className=\"posts__body\">\n        <p>{message}</p>\n      </div>\n\n      <div className=\"posts__buttons\">\n        <InputOption Icon={ThumbUpAltOutlined} title=\"Like\" color=\"gray\" />\n        <InputOption Icon={CommentIcon} title=\"Comment\" color=\"gray\" />\n        <InputOption\n          Icon={ArrowRightAltRoundedIcon}\n          title=\"Share\"\n          color=\"gray\"\n        />\n        <InputOption Icon={SendRoundedIcon} title=\"Send\" color=\"gray\" />\n      </div>\n    </div>\n  );\n});\n\nexport default Posts;\n","import firebase from \"firebase\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCAevDAdl9jEzQGtzfjix2R1lOW-gBLPPw\",\n  authDomain: \"linkedin-clone-d0333.firebaseapp.com\",\n  projectId: \"linkedin-clone-d0333\",\n  storageBucket: \"linkedin-clone-d0333.appspot.com\",\n  messagingSenderId: \"206635955569\",\n  appId: \"1:206635955569:web:38a09aa9f46fa5945a72d0\",\n  measurementId: \"G-F2FE09DDYF\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebaseApp.auth();\n\nexport { db, auth };\n","import React, { useEffect, useState } from \"react\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport InputOption from \"./InputOption\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport VideoLibraryIcon from \"@material-ui/icons/VideoLibrary\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"./Feed.css\";\nimport Posts from \"./Posts\";\nimport { db } from \"./firebase\";\nimport firebase from \"firebase\";\nimport { selectUser } from \"./features/userSlice\";\nimport { useSelector } from \"react-redux\";\nimport FlipMove from \"react-flip-move\";\n\nfunction Feed() {\n  const [input, setInput] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const user = useSelector(selectUser);\n\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n  }, []);\n\n  const sendPost = (e) => {\n    e.preventDefault();\n\n    db.collection(\"posts\").add({\n      name: user.displayName,\n      description: user.email,\n      message: input,\n      photoURL: user.photoUrl,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    setInput(\"\");\n  };\n\n  const renderAvatar = (Avatar, src) => <Avatar src={src}></Avatar>;\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feed__inputContainer\">\n        <div className=\"feed__input\">\n          {renderAvatar(Avatar, user.photoUrl)}{\" \"}\n          <div className=\"createIcon\">\n            <CreateIcon />\n          </div>\n          <form onSubmit={sendPost}>\n            <input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              type=\"text\"\n            />\n            <button type=\"submit\">Send</button>\n          </form>\n        </div>\n\n        <div className=\"feed__inputOptions\">\n          {/* input options */}\n          <InputOption Icon={ImageIcon} title=\"Photo\" color=\"#70B5F9\" />\n          <InputOption Icon={VideoLibraryIcon} title=\"Video\" color=\"#7FC15E\" />\n          <InputOption Icon={EventIcon} title=\"Event\" color=\"#E7A33E\" />\n          <InputOption\n            Icon={AssignmentIcon}\n            title=\"Write article\"\n            color=\"#FC9295\"\n          />\n        </div>\n      </div>\n\n      <FlipMove>\n        {posts.map(\n          ({\n            id,\n            data: { name, description, message, photoURL, timestamp },\n          }) => (\n            <Posts\n              key={id}\n              name={name}\n              description={description}\n              message={message}\n              photoURL={photoURL}\n              timestamp={timestamp}\n            />\n          )\n        )}\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default Feed;\n","import { Avatar } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport \"./HeaderOption.css\";\n\nfunction HeaderOption({ avatar, Icon, title }) {\n  const user = useSelector(selectUser);\n\n  return (\n    <div className=\"headerOption\">\n      {Icon && <Icon className=\"headerOption__icon\" />}\n      {avatar && (\n        <Avatar src={user.photoUrl} className=\"headerOption__icon\"></Avatar>\n      )}\n      <h3 className=\"headerOption__title\">{title}</h3>\n    </div>\n  );\n}\n\nexport default HeaderOption;\n","import React from \"react\";\nimport HeaderOption from \"./HeaderOption\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport SupervisorAccountRoundedIcon from \"@material-ui/icons/SupervisorAccountRounded\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport CommentRoundedIcon from \"@material-ui/icons/CommentRounded\";\nimport NotificationsRoundedIcon from \"@material-ui/icons/NotificationsRounded\";\nimport AppsRoundedIcon from \"@material-ui/icons/AppsRounded\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { useSelector } from \"react-redux\";\nimport { logout, selectUser } from \"./features/userSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { auth } from \"./firebase\";\nimport \"./Header.css\";\n\nfunction Header() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const logOutOfApp = (e) => {\n    e.preventDefault();\n    dispatch(logout());\n    auth.signOut();\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <img\n          src=\"https://www.svgrepo.com/show/303299/linkedin-icon-2-logo.svg\"\n          alt=\"\"\n        />\n        <div className=\"header__search\">\n          <SearchIcon />\n          <input type=\"text\" placeholder=\"Search\" />\n        </div>\n      </div>\n\n      <div className=\"header__right\">\n        <HeaderOption Icon={HomeRoundedIcon} title=\"Home\" />\n        <HeaderOption Icon={SupervisorAccountRoundedIcon} title=\"My Network\" />\n        <HeaderOption Icon={WorkIcon} title=\"Jobs\" />\n        <HeaderOption Icon={CommentRoundedIcon} title=\"Messages\" />\n        <HeaderOption Icon={NotificationsRoundedIcon} title=\"Notifications\" />\n        {user ? <HeaderOption avatar={true} title=\"me\"></HeaderOption> : null}\n        {user ? (\n          <div onClick={logOutOfApp}>\n            <HeaderOption Icon={ExitToAppIcon} title=\"Sign Out\" />\n          </div>\n        ) : null}\n        <HeaderOption Icon={AppsRoundedIcon} title=\"Work\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { auth } from \"./firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"./features/userSlice\";\nimport \"./Login.css\";\n\nfunction Login() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [profilePic, setProfilepic] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const logInToApp = (e) => {\n    e.preventDefault();\n\n    auth.signInWithEmailAndPassword(email, password).then((userAuth) =>\n      dispatch(\n        login({\n          uid: userAuth.user.uid,\n          email: userAuth.user.email,\n          name: userAuth.user.displayName,\n          profilePic: userAuth.user.photoURL,\n        })\n      )\n    );\n  };\n\n  const register = () => {\n    if (!name) return alert(\"Please enter full name\");\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userAuth) => {\n        userAuth.user\n          .updateProfile({\n            displayName: name,\n            photoURL: profilePic,\n          })\n          .then(() =>\n            dispatch(\n              login({\n                email: userAuth.user.email,\n                uid: userAuth.user.uid,\n                displayName: name,\n                profilePic: userAuth.user.photoURL,\n              })\n            )\n          );\n      })\n      .catch((error) => alert(error));\n  };\n\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://www.tmf-group.com/-/media/images/logos/case-study-logos/linkedin.png\"\n        alt=\"\"\n      />\n      <form>\n        <input\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Full name (required if registering)\"\n          type=\"text\"\n        />\n        <input\n          value={profilePic}\n          onChange={(e) => setProfilepic(e.target.value)}\n          placeholder=\"Profile Picture URL\"\n          type=\"text\"\n        />\n        <input\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Email\"\n          type=\"email\"\n        />\n        <input\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          type=\"password\"\n        />\n        <button type=\"submit\" onClick={logInToApp}>\n          Sign in\n        </button>\n      </form>\n\n      <p>\n        Not a member?{\" \"}\n        <span className=\"login__register\" onClick={register}>\n          Register now\n        </span>\n      </p>\n    </div>\n  );\n}\n\nexport default Login;\n","import { Avatar } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport \"./Sidebar.css\";\n\nfunction SideBar() {\n  const user = useSelector(selectUser);\n\n  const recentItems = (topic) => (\n    <div className=\"sidebar__recentItems\">\n      <span className=\"sidebar__hash\">#</span>\n      <p>{topic}</p>\n    </div>\n  );\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__top\">\n        <img\n          src=\"https://images.unsplash.com/photo-1579546929518-9e396f3cc809?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTR8fGNvbG91cmZ1bHxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80\"\n          alt=\"\"\n        />\n        <Avatar className=\"sidebar__avatar\" src={user.photoUrl}></Avatar>\n        <h2>{user.displayName}</h2>\n        <h4>{user.email}</h4>\n      </div>\n\n      <div className=\"sidebar__stats\">\n        <div className=\"sidebar__stat\">\n          <p>Who viewed you</p>\n          <p className=\"sidebar__statnumber\">2,836</p>\n        </div>\n\n        <div className=\"sidebar__stat\">\n          <p>Views on Post</p>\n          <p className=\"sidebar__statnumber\">1,765</p>\n        </div>\n      </div>\n      <div className=\"sidebar__bottom\">\n        <p>Recent</p>\n        {recentItems(\"reactjs\")}\n        {recentItems(\"programming\")}\n        {recentItems(\"javascript\")}\n        {recentItems(\"webdevelopment\")}\n        {recentItems(\"nextjs\")}\n        {recentItems(\"html\")}\n        {recentItems(\"tailwindcss\")}\n        {recentItems(\"google\")}\n        {recentItems(\"amazon\")}\n        {recentItems(\"java\")}\n        {recentItems(\"coding\")}\n      </div>\n    </div>\n  );\n}\n\nexport default SideBar;\n","import React from \"react\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport \"./Widgets.css\";\n\nfunction Widgets() {\n  const newsArticle = (heading, subtitle) => (\n    <div className=\"widgets__article\">\n      <div className=\"widgets__articleLeft\">\n        <FiberManualRecordIcon />\n      </div>\n\n      <div className=\"widgets__articleRight\">\n        <h4>{heading}</h4>\n        <p>{subtitle}</p>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"widgets\">\n      <div className=\"widgets__header\">\n        <h2>Linkedin News</h2>\n        <InfoIcon />\n      </div>\n      {newsArticle(\n        \"REACTJS is fun\",\n        \"Learn the BASICS! Then you can show your ideas in the web\"\n      )}\n      {newsArticle(\n        \"CORONA Virus UPDATE in Bangladesh\",\n        \"Top news - 1800 reads\"\n      )}\n      {newsArticle(\"HTML/CSS cheatsheets\", \"Top news - 1400 reads\")}\n    </div>\n  );\n}\n\nexport default Widgets;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport Feed from \"./Feed\";\nimport { auth } from \"./firebase\";\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport SideBar from \"./SideBar\";\nimport Widgets from \"./Widgets\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        // user is logged in\n        dispatch(\n          login({\n            email: userAuth.email,\n            uid: userAuth.uid,\n            displayName: userAuth.displayName,\n            photoUrl: userAuth.photoURL,\n          })\n        );\n      } else {\n        // user is logged out\n        dispatch(logout());\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Header />\n\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app__body\">\n          <SideBar />\n          <Feed />\n          <Widgets />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"../features/userSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}